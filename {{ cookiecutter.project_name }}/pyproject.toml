[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.project_name }}"
authors = [
  { name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}" },
]
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
dynamic = ["version"]

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "mcp[cli]",
    "httpx"
]

[dependency-groups]
dev = [
    "mypy",
    "pytest",
    "ruff"
]

[tool.hatch.build.targets.wheel]
packages = ["{{ cookiecutter.project_slug }}"]

[tool.hatch.version]
path = "{{ cookiecutter.project_slug }}/version.py"

[project.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.main:app"

[tool.pytest.ini_options]
pythonpath = "{{ cookiecutter.project_slug }}"

[tool.mypy]
python_version = "{{ cookiecutter.python_version }}"
warn_return_any = true
warn_unused_configs = true
exclude = [
    ".+test_"
]

[tool.ruff]
line-length = 88
target-version = "py{{ cookiecutter.python_version.replace('.', '') }}"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
